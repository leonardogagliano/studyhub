- Função é um bloco de códigos e executa uma série específica de comandos.

- A sintaxe para declarar uma função é a seguinte:

	function nome-da-funcao() {
		linhas-de-codigo;
	}
	
- Para chamar uma função:
	nome-da-funcao();
	
- parâmetros : valores que são inseridos na função. São colocados dentro dos parênteses que vêm depois do nome da função.

- return : o retorno de uma função.

Obs: parâmetros e retorno são opcionais em uma função.

--> Em progamação, quanto mais bem divididas as responsabilidades das funções, melhor.

////////////////////////

Loops ou estruturas de repetição:

--> Estrutura que executa um determinado bloco de código enquanto a condição for verdadeira;

1) WHILE
	--> Enquanto a condição for verdadeira, o código é executado.
	--> Sintaxe:
			
			while(condição){
				linhas-de-codigo;
			}
			
2) DO-WHILE
	--> Funciona da mesma forma que o WHILE. Porém, executa o código ao menos uma vez antes de verfiicar a condição.
	--> Sintaxe:
			do{
			
			}while(condição)
			
3) FOR 
	--> Executa um bloco de código até que a variável de controle atinja a condição desejada.
		Apresenta maior segurança, pois limita as variáveis dentro de seu escopo.
	--> sintaxe
		for(variavelControle; condiçãoParada; incremento){
			
		}
		
///////////////////////////

-> DOM : permite manipular o HTML através de Javascript
	document : comando que seleciona o documento HTML. Com isso, podemos manipular o arquivo HTML, alterando tags, valores, etc.
		//estes comando são executados no console da página dentro do navegador
		
		Alguns comandos:
			document.getElementById()
			document.getElementsByClassName()
			document.getElementByTagName()
			document.querySelector() //seleciona o primeiro elemento encontrado
			document.querySelectorAll() //seleciona todos os elementos do tipo
			
			document.createElement() //cria uma tag especificada
			appendChild() //
			
		--> é possível armazenar o valor de retorno desses comando em uma variável:
			exemplo:
				
				let section = document.getElementById("id-name")